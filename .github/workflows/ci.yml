name: CI
on: pull_request

jobs:
  build-windows:
    name: Build wheels on Windows x64

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set default triplet
        run: echo "VCPKG_DEFAULT_TRIPLET=x64-windows" >> $GITHUB_ENV
      
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: "${{ github.workspace }}\\vcpkg"
          triplet: "x64-windows"
      
      - name: Build wheel
        uses: pypa/cibuildwheel@v2.21.1
        with:
          platform: "windows"
          python-version: "3.12"
          architecture: "x64"
      
      - name: Store wheel
        uses: actions/upload-artifact@v4
        with:
          name: "mini-face-win_2022_x64"
          path: .\\wheelhouse\\*.whl
          compression-level: 0
      
  build-macos:
    name: Build wheels on macOS arm-x64

    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"

      - name: Build wheel
        uses: pypa/cibuildwheel@v2.21.1

      - name: Store wheel
        uses: actions/upload-artifact@v4
        with:
          name: "mini-face-macosx_14_0_arm64"
          path: ./wheelhouse/*.whl
          compression-level: 0

  build-linux:
    name: Build wheels on Linux ${{ matrix.architecture }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - wheel_name: "mini-face-manylinux_2_28_x86_64"
            architecture: "x86_64"
            container: ".github/containers/manylinux_x86_64.Dockerfile"

          # - wheel_name: "mini-face-manylinux_2_28_aarch64"
          #   architecture: "aarch64"
          #   container: ".github/containers/manylinux_aarch64.Dockerfile"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace vcpkg manifest
        run: |
          cp .github/manifests/linux_${{ matrix.architecture }}/vcpkg.json .

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          buildkitd-flags: --debug

      - name: Build Docker image
        # using build-push-action (without actually using `push`) to make use of cache arguments
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.container }}
          tags: manylinux_${{ matrix.architecture }}:latest
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          BUILDKIT_PROGRESS: plain

      - name: Build wheel
        uses: pypa/cibuildwheel@v2.21.1

      - name: Store wheel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.wheel_name }}
          path: ./wheelhouse/*.whl
          compression-level: 0
